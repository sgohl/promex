#!/bin/bash -e

case $1 in
  run)  
    case $2 in
      all|'')
        for GROUP in ${GROUPS}
        do
          CHECKS=$(find ${BASE}/${GROUP} -maxdepth 1 -mindepth 1  -type d | xargs basename -a)
          for CHECK in ${CHECKS}
          do
            ts -n flock -x -n /tmp/${GROUP}_${CHECK}.flock promex run ${GROUP} ${CHECK}
          done
        done
      ;;
      *)
        GROUP=$2
        
        case $3 in
          all|'')
            CHECKS=$(find ${BASE}/${GROUP} -maxdepth 1 -mindepth 1  -type d | xargs basename -a)
          ;;
          *)
            CHECKS="${3}"
          ;;
        esac
        
        #echo "PROMEX :: run GROUP=$2 CHECKS=$CHECKS"
        
        for CHECK in ${CHECKS}
        do

          CHECK_PATH=${BASE}/${GROUP}/${CHECK}
          NAME="${GROUP,,}_${CHECK,,}"

          source ${CHECK_PATH}/meta
          LINE_HELP="# HELP ${NAME} ${HELP}"
          LINE_TYPE="# TYPE ${NAME} ${TYPE}"

          VALUE=$(bash ${CHECK_PATH}/run 2>&1)
          LINE_VAL="${NAME} ${VALUE}"

#printf "PROMEX :: $CHECK_PATH \r\n$NAME \r\n$LINE_HELP \r\n$LINE_TYPE \r\n$LINE_VAL"

          cat > ${OUT}/${NAME} <<EOF
${LINE_HELP}
${LINE_TYPE}
${LINE_VAL}
EOF
          if [[ $SHLVL -lt 3 ]]
          then
            cat ${OUT}/${NAME}
          fi
    
        done
      ;;
    esac
  ;;
  
  metrics)
    promex run all
    echo "promex_hostname $HOSTNAME"
    cat ${OUT}/*_*
  ;;
  
  web)
    mkdir -p $OUT
    /app/shell2http -port 8080 -form ${OPTS} \
      /metrics    'promex metrics' \
      /check      'promex run ${v_g} ${v_c} ; cat ${OUT}/${v_g}_${v_c}*'
  ;;
esac
